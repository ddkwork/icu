diff --git a/source/common/locmap.cpp b/source/common/locmap.cpp
index d075d031..c900fe9b 100644
--- a/source/common/locmap.cpp
+++ b/source/common/locmap.cpp
@@ -32,12 +32,10 @@
 #include "cmemory.h"
 #include "unicode/uloc.h"
 
-#if 0
-#if U_PLATFORM_HAS_WIN32_API && UCONFIG_USE_WINDOWS_LCID_MAPPING_API
+#if U_PLATFORM_HAS_WIN32_API && UCONFIG_USE_WINDOWS_LCID_MAPPING_API && 0
 #include <windows.h>
 #include <winnls.h> // LCIDToLocaleName and LocaleNameToLCID
 #endif
-#endif
 
 /*
  * Note:
@@ -1028,7 +1026,7 @@ getPosixID(const ILcidPosixMap *this_0, uint32_t hostID)
 //
 /////////////////////////////////////
 */
-#if U_PLATFORM_HAS_WIN32_API && UCONFIG_USE_WINDOWS_LCID_MAPPING_API
+#if U_PLATFORM_HAS_WIN32_API && UCONFIG_USE_WINDOWS_LCID_MAPPING_API && 0
 /*
  * Various language tags needs to be changed:
  * quz -> qu
@@ -1055,7 +1053,7 @@ uprv_convertToPosix(uint32_t hostid, char *posixID, int32_t posixIDCapacity, UEr
     UBool bLookup = TRUE;
     const char *pPosixID = NULL;
 
-#if U_PLATFORM_HAS_WIN32_API && UCONFIG_USE_WINDOWS_LCID_MAPPING_API
+#if U_PLATFORM_HAS_WIN32_API && UCONFIG_USE_WINDOWS_LCID_MAPPING_API && 0
     static_assert(ULOC_FULLNAME_CAPACITY > LOCALE_NAME_MAX_LENGTH, "Windows locale names have smaller length than ICU locale names.");
 
     char locName[LOCALE_NAME_MAX_LENGTH] = {};
@@ -1167,7 +1165,7 @@ uprv_convertToLCIDPlatform(const char* localeID, UErrorCode* status)
 
     // The purpose of this function is to leverage the Windows platform name->lcid
     // conversion functionality when available.
-#if U_PLATFORM_HAS_WIN32_API && UCONFIG_USE_WINDOWS_LCID_MAPPING_API
+#if U_PLATFORM_HAS_WIN32_API && UCONFIG_USE_WINDOWS_LCID_MAPPING_API && 0
     int32_t len;
     char collVal[ULOC_KEYWORDS_CAPACITY] = {};
     char baseName[ULOC_FULLNAME_CAPACITY] = {};
