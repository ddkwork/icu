{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "aa3e37ef_26bfcdfc",
        "filename": "source/i18n/unicode/numfmt.h",
        "patchSetId": 1
      },
      "lineNbr": 277,
      "author": {
        "id": 1151758
      },
      "writtenOn": "2022-05-05T19:27:33Z",
      "side": 0,
      "message": "I must be missing something, but I wonder why you have to drop this and add isEqual().  I guess that\u0027s kind of change Frank is worried about. \n\nNote that https://github.com/unicode-org/icu/pull/1786/commits/25d1c12549fe754114a7e5edd6ae067f879e8d86 changes UBool to bool for this API and a bunch of others.",
      "range": {
        "startLine": 271,
        "startChar": 3,
        "endLine": 277,
        "endChar": 64
      },
      "revId": "85814e1af52482199a13d284545623ffbc9eef83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "978c317f_6fafb1c6",
        "filename": "source/i18n/unicode/numfmt.h",
        "patchSetId": 1
      },
      "lineNbr": 277,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2022-05-05T20:14:12Z",
      "side": 0,
      "message": "Markus emailed about the same thing.  This override is gone, but the base class method is not, so callers should still see the same available functionality.  isEqual() is a new implementation detail of that base class operator.",
      "parentUuid": "aa3e37ef_26bfcdfc",
      "range": {
        "startLine": 271,
        "startChar": 3,
        "endLine": 277,
        "endChar": 64
      },
      "revId": "85814e1af52482199a13d284545623ffbc9eef83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3b3ebfa_48fa1b90",
        "filename": "source/i18n/unicode/numfmt.h",
        "patchSetId": 1
      },
      "lineNbr": 277,
      "author": {
        "id": 1151758
      },
      "writtenOn": "2022-05-06T15:50:09Z",
      "side": 0,
      "message": "Aha. I should have looked at format.{cpp,h}.   Then, wouldn\u0027t it be better to make isEqual() private (I hope there is no need to call it directly)?",
      "parentUuid": "978c317f_6fafb1c6",
      "range": {
        "startLine": 271,
        "startChar": 3,
        "endLine": 277,
        "endChar": 64
      },
      "revId": "85814e1af52482199a13d284545623ffbc9eef83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98605673_12838800",
        "filename": "source/i18n/unicode/numfmt.h",
        "patchSetId": 1
      },
      "lineNbr": 277,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2022-05-06T15:52:36Z",
      "side": 0,
      "message": "If there\u0027s a hierarchy like C is-a B is-a A, then C::isEqual() may need to verify B::isEqual() (and in fact does in a few places in this CL).  Hence why it\u0027s protected instead of private.",
      "parentUuid": "b3b3ebfa_48fa1b90",
      "range": {
        "startLine": 271,
        "startChar": 3,
        "endLine": 277,
        "endChar": 64
      },
      "revId": "85814e1af52482199a13d284545623ffbc9eef83",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}