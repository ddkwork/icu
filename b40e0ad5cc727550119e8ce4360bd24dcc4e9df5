{
  "comments": [
    {
      "key": {
        "uuid": "bafc4b91_ff772afc",
        "filename": "README.chromium",
        "patchSetId": 1
      },
      "lineNbr": 283,
      "author": {
        "id": 1000046
      },
      "writtenOn": "2017-12-20T19:46:33Z",
      "side": 1,
      "message": "It\u0027s actually 16+32 kiB since you removed both tables. :)  Here\u0027s the sizes from nm on libmonochrome.so:\n\n02913c3c 00004000 r gDigitCount\n02917c3c 00008000 r gDigits",
      "revId": "b40e0ad5cc727550119e8ce4360bd24dcc4e9df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f7dc55a_ce83f631",
        "filename": "README.chromium",
        "patchSetId": 1
      },
      "lineNbr": 283,
      "author": {
        "id": 1001352
      },
      "writtenOn": "2017-12-21T13:17:46Z",
      "side": 1,
      "message": "Thanks, I\u0027ve updated the commit message.",
      "parentUuid": "bafc4b91_ff772afc",
      "revId": "b40e0ad5cc727550119e8ce4360bd24dcc4e9df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed268b17_84afb7a3",
        "filename": "README.chromium",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2017-12-21T01:05:44Z",
      "side": 1,
      "message": "Can we file an upstream bug for this as well?  If Chromium would benefit, likely other consumers would too, and we don\u0027t want to carry CHromium-side patches to third-party code indefinitely.",
      "revId": "b40e0ad5cc727550119e8ce4360bd24dcc4e9df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64a6643a_21f408b3",
        "filename": "README.chromium",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1001352
      },
      "writtenOn": "2017-12-21T13:17:46Z",
      "side": 1,
      "message": "That\u0027s the plan, but before that I\u0027d like to get a patch that Chromium is satisfied with.",
      "parentUuid": "ed268b17_84afb7a3",
      "revId": "b40e0ad5cc727550119e8ce4360bd24dcc4e9df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f09be99_3a0f3cb0",
        "filename": "README.chromium",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1151758
      },
      "writtenOn": "2018-01-09T01:11:58Z",
      "side": 1,
      "message": "Did I this CL ? If so, sorry for that. \n\nAnyway, I agree with Peter. I\u0027d rather file an upstream bug now rather than later to see what upstream thinks of this kind of change.  BTW, the upstream has a shiny new API for NumberFormat which may or may not have this issue.",
      "parentUuid": "64a6643a_21f408b3",
      "revId": "b40e0ad5cc727550119e8ce4360bd24dcc4e9df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "896ba0a0_45de63f8",
        "filename": "README.chromium",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1181561
      },
      "writtenOn": "2018-01-09T01:37:43Z",
      "side": 1,
      "message": "Thanks for copying me on this, Jungshik :)\n\nCan I have more context for the reasoning behind this CL?  How was this issue discovered?  Is there an effort in Chromium to reduce binary file size?\n\nFYI: This file is an internal optimization for ICU4C DecimalFormat introduced a few versions ago.  I have been working on this code lately, and although I haven\u0027t addressed this piece of it yet, it is not unlikely that I will be touching and/or majorly refactoring this same piece of code in the next ICU release.  If binary size is an issue, I\u0027ll try to shy away from putting large data structures in the code.",
      "parentUuid": "5f09be99_3a0f3cb0",
      "revId": "b40e0ad5cc727550119e8ce4360bd24dcc4e9df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f6193e6_870f4c65",
        "filename": "README.chromium",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1151758
      },
      "writtenOn": "2018-01-09T05:58:03Z",
      "side": 1,
      "message": "Thanks, Shane ! \n\nYes, the binary size is always an issue (the smaller the better). If we can reduce 40 KiB with a minimal perf impact, we should all go for it.  \n\nWould you take this patch in the upstream and start your refactoring/etc with this CL applied?",
      "parentUuid": "896ba0a0_45de63f8",
      "revId": "b40e0ad5cc727550119e8ce4360bd24dcc4e9df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fe40277_26362f6b",
        "filename": "README.chromium",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000046
      },
      "writtenOn": "2018-01-09T19:39:51Z",
      "side": 1,
      "message": "@Shane: Yup. I was examining the largest symbols in the chromium binary and this showed up near the top. During some internal discussion, we started to question whether or not have a 40kb lookup table with the implied hit on dcache locality would even end up being actually faster than a small function.\n\nNo mircobenchmarks were done, but with modern processors, it\u0027s hard to a short bounded loop being significant...",
      "parentUuid": "9f6193e6_870f4c65",
      "revId": "b40e0ad5cc727550119e8ce4360bd24dcc4e9df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e584e85_db41c150",
        "filename": "README.chromium",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1181561
      },
      "writtenOn": "2018-01-09T19:59:41Z",
      "side": 1,
      "message": "FYI, it appears that this issue was also noticed by Chrome 18 months ago:\nhttp://bugs.icu-project.org/trac/ticket/12390\nThere is more discussion in that ticket.  I closed Jungshik\u0027s new ticket as a duplicate.\n\nMore context: this file, smallintformatter.cpp, was introduced specifically as a fastpath for small ints in DecimalFormat.  Travis (who wrote the file) did extensive benchmarking.  I wasn\u0027t around at the time so I don\u0027t know if he considered the for-loop option.",
      "parentUuid": "4fe40277_26362f6b",
      "revId": "b40e0ad5cc727550119e8ce4360bd24dcc4e9df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e30cbc3_c51c3bce",
        "filename": "README.chromium",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1181561
      },
      "writtenOn": "2018-01-11T03:05:13Z",
      "side": 1,
      "message": "I will take the patch and run benchmarks when I start dissecting this code as part of the ICU4C DecimalFormat overhaul.",
      "parentUuid": "4e584e85_db41c150",
      "revId": "b40e0ad5cc727550119e8ce4360bd24dcc4e9df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a36fc26c_374703ef",
        "filename": "README.chromium",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1151758
      },
      "writtenOn": "2018-01-11T17:43:14Z",
      "side": 1,
      "message": "Thanks, Shane. \n\nIn the meantime, David, please feel free to land this CL locally if you wish to. It may be\nshort-lived until May/ICU 61 (or it may be incorporated in the upstream with/without a change). Whichever it may be, it\u0027s unprecedented to apply a local change first and reconcile later.",
      "parentUuid": "3e30cbc3_c51c3bce",
      "revId": "b40e0ad5cc727550119e8ce4360bd24dcc4e9df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e4a46e0_84f2f3ca",
        "filename": "source/i18n/smallintformatter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1000046
      },
      "writtenOn": "2017-12-20T19:44:16Z",
      "side": 1,
      "message": "We have a number of spots using this constant now. It may be worth pulling out that to `constexpr static int kMaxDigits \u003d 4;` and using that everywhere?",
      "revId": "b40e0ad5cc727550119e8ce4360bd24dcc4e9df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9b3b204_7563f0af",
        "filename": "source/i18n/smallintformatter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1001352
      },
      "writtenOn": "2017-12-21T13:17:46Z",
      "side": 1,
      "message": "Good idea, done (while bumping the constant to 6).",
      "parentUuid": "0e4a46e0_84f2f3ca",
      "revId": "b40e0ad5cc727550119e8ce4360bd24dcc4e9df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}