# Copyright 2018 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

ICU_VER = "63"
CLDR_VER = "34"

include_confusables = true
strip_rare_calendars = false
strip_almost_all_calendars = false
strip_zone_example_cities = true
remove_language_names_already_in_android = false
extra_languages_to_minimize = ""  # Comma separated.
remove_duplicate_root_eras = false  # Why not always true?

_nrm_sources = [
  "nfkc.nrm",
  "nfkc_cf.nrm",
  "uts46.nrm",
]

icu_nrm_sources = []
foreach(source_file, _nrm_sources) {
  icu_nrm_sources += [ "source/data/in/$source_file" ]
}

# Not really "generated", just copied.
icu_nrm_generated = _nrm_sources

_ucm_sources = [
  # List currently maintained as UCM_SOURCE_CORE in
  # source/data/mappings/ucmlocal.mk
  "iso-8859-2-html.ucm",
  "iso-8859-3-html.ucm",
  "iso-8859-4-html.ucm",
  "iso-8859-5-html.ucm",
  "iso-8859-6-html.ucm",
  "iso-8859-7-html.ucm",
  "iso-8859-8-html.ucm",
  "iso-8859-10-html.ucm",
  "iso-8859-13-html.ucm",
  "iso-8859-14-html.ucm",
  "iso-8859-15-html.ucm",
  "iso-8859-16-html.ucm",
  "windows-1250-html.ucm",
  "windows-1251-html.ucm",
  "windows-1252-html.ucm",
  "windows-1253-html.ucm",
  "windows-1254-html.ucm",
  "windows-1255-html.ucm",
  "windows-1256-html.ucm",
  "windows-1257-html.ucm",
  "windows-1258-html.ucm",
  "windows-936-2000.ucm",
  "gb18030.ucm",
  "big5-html.ucm",
  "shift_jis-html.ucm",
  "euc-jp-html.ucm",
  "euc-kr-html.ucm",
  "windows-874-html.ucm",
  "macintosh-html.ucm",
  "x-mac-cyrillic-html.ucm",
  "ibm866-html.ucm",
  "koi8-r-html.ucm",
  "koi8-u-html.ucm",
]

icu_ucm_sources = []
icu_ucm_generated = []
foreach(source_file, _ucm_sources) {
  icu_ucm_sources += [ "source/data/mappings/$source_file" ]
  icu_ucm_generated += [
    string_replace(source_file, ".ucm", ".cnv") ]
}

_brk_sources = [
  # List currently maintained as BRK_SOURCE in brklocal.mk
  "char.txt",
  "line.txt",
  "line_loose.txt",
  "line_loose_cj.txt",
  "line_normal.txt",
  "line_normal_cj.txt",
  "sent.txt",
  "sent_el.txt",
  "title.txt",
  #  "word.txt",  # Hardcoded in the build script for special filtering
]

icu_brkitr_brk_sources = []
icu_brkitr_brk_generated = []
foreach(source_file, _brk_sources) {
  icu_brkitr_brk_sources += [ "source/data/brkitr/rules/$source_file" ]
  icu_brkitr_brk_generated += [
    "brkitr/" + string_replace(source_file, ".txt", ".brk") ]
}
icu_brkitr_brk_generated += [ "brkitr/word.brk" ]  # See comment above

_dict_sources = [
  "burmesedict.txt",
  "cjdict.txt",
  "khmerdict.txt",
  "laodict.txt",
  "thaidict.txt",
]

icu_brkitr_dict_sources = []
icu_brkitr_dict_generated = []
foreach(source_file, _dict_sources) {
  icu_brkitr_dict_sources += [ "source/data/brkitr/$source_file" ]
  icu_brkitr_dict_generated += [
    "brkitr/" + string_replace(source_file, ".txt", ".dict") ]
}
has_cjdict = true

_brkitr_res_sources = [
  # List currently maintained as BRK_RES_SOURCE in brkitr/brklocal.mk
  "de.txt",
  "el.txt",
  "en.txt",
  "en_US.txt",
  "es.txt",
  "fr.txt",
  "it.txt",
  "ja.txt",  # Sometimes special cased in the build system
  "pt.txt",
  "ru.txt",
  "zh.txt",
  "zh_Hant.txt",
]

icu_brkitr_res_sources = []
icu_brkitr_res_prefiltered_sources = []  # Sometimes has ja.txt in it.
icu_brkitr_res_generated = []
foreach(source_file, _brkitr_res_sources) {
  icu_brkitr_res_sources += [ "source/data/brkitr/$source_file" ]
  icu_brkitr_res_generated += [
    "brkitr/" + string_replace(source_file, ".txt", ".res") ]
}

_locales_sources = [
  "am.txt",
  "ar.txt",
  "ar_001.txt",
  "ar_AE.txt",
  "ar_BH.txt",
  "ar_DJ.txt",
  "ar_DZ.txt",
  "ar_EG.txt",
  "ar_EH.txt",
  "ar_ER.txt",
  "ar_IL.txt",
  "ar_IQ.txt",
  "ar_JO.txt",
  "ar_KM.txt",
  "ar_KW.txt",
  "ar_LB.txt",
  "ar_LY.txt",
  "ar_MA.txt",
  "ar_MR.txt",
  "ar_OM.txt",
  "ar_PS.txt",
  "ar_QA.txt",
  "ar_SA.txt",
  "ar_SD.txt",
  "ar_SO.txt",
  "ar_SS.txt",
  "ar_SY.txt",
  "ar_TD.txt",
  "ar_TN.txt",
  "ar_YE.txt",
  "bg.txt",
  "bn.txt",
  "ca.txt",
  "cs.txt",
  "da.txt",
  "de.txt",
  "de_AT.txt",
  "de_BE.txt",
  "de_CH.txt",
  "de_IT.txt",
  "de_LI.txt",
  "de_LU.txt",
  "el.txt",
  "en.txt",
  "en_001.txt",
  "en_150.txt",
  "en_AG.txt",
  "en_AI.txt",
  "en_AS.txt",
  "en_AT.txt",
  "en_AU.txt",
  "en_BB.txt",
  "en_BE.txt",
  "en_BI.txt",
  "en_BM.txt",
  "en_BS.txt",
  "en_BW.txt",
  "en_BZ.txt",
  "en_CA.txt",
  "en_CC.txt",
  "en_CH.txt",
  "en_CK.txt",
  "en_CM.txt",
  "en_CX.txt",
  "en_CY.txt",
  "en_DE.txt",
  "en_DG.txt",
  "en_DK.txt",
  "en_DM.txt",
  "en_ER.txt",
  "en_FI.txt",
  "en_FJ.txt",
  "en_FK.txt",
  "en_FM.txt",
  "en_GB.txt",
  "en_GD.txt",
  "en_GG.txt",
  "en_GH.txt",
  "en_GI.txt",
  "en_GM.txt",
  "en_GU.txt",
  "en_GY.txt",
  "en_HK.txt",
  "en_IE.txt",
  "en_IL.txt",
  "en_IM.txt",
  "en_IN.txt",
  "en_IO.txt",
  "en_JE.txt",
  "en_JM.txt",
  "en_KE.txt",
  "en_KI.txt",
  "en_KN.txt",
  "en_KY.txt",
  "en_LC.txt",
  "en_LR.txt",
  "en_LS.txt",
  "en_MG.txt",
  "en_MH.txt",
  "en_MO.txt",
  "en_MP.txt",
  "en_MS.txt",
  "en_MT.txt",
  "en_MU.txt",
  "en_MW.txt",
  "en_MY.txt",
  "en_NA.txt",
  "en_NF.txt",
  "en_NG.txt",
  "en_NL.txt",
  "en_NR.txt",
  "en_NU.txt",
  "en_NZ.txt",
  "en_PG.txt",
  "en_PH.txt",
  "en_PK.txt",
  "en_PN.txt",
  "en_PR.txt",
  "en_PW.txt",
  "en_RW.txt",
  "en_SB.txt",
  "en_SC.txt",
  "en_SD.txt",
  "en_SE.txt",
  "en_SG.txt",
  "en_SH.txt",
  "en_SI.txt",
  "en_SL.txt",
  "en_SS.txt",
  "en_SX.txt",
  "en_SZ.txt",
  "en_TC.txt",
  "en_TK.txt",
  "en_TO.txt",
  "en_TT.txt",
  "en_TV.txt",
  "en_TZ.txt",
  "en_UG.txt",
  "en_UM.txt",
  "en_US.txt",
  "en_US_POSIX.txt",
  "en_VC.txt",
  "en_VG.txt",
  "en_VI.txt",
  "en_VU.txt",
  "en_WS.txt",
  "en_ZA.txt",
  "en_ZM.txt",
  "en_ZW.txt",
  "es.txt",
  "es_ES.txt",
  "es_419.txt",
  "es_AR.txt",
  "es_MX.txt",
  "es_US.txt",
  "es_BO.txt",
  "es_BR.txt",
  "es_BZ.txt",
  "es_CL.txt",
  "es_CO.txt",
  "es_CR.txt",
  "es_CU.txt",
  "es_DO.txt",
  "es_EA.txt",
  "es_EC.txt",
  "es_GQ.txt",
  "es_GT.txt",
  "es_HN.txt",
  "es_IC.txt",
  "es_NI.txt",
  "es_PA.txt",
  "es_PE.txt",
  "es_PH.txt",
  "es_PR.txt",
  "es_PY.txt",
  "es_SV.txt",
  "es_UY.txt",
  "es_VE.txt",
  "et.txt",
  "fa.txt",
  "fi.txt",
  "fil.txt",
  "fr.txt",
  "fr_BE.txt",
  "fr_BF.txt",
  "fr_BI.txt",
  "fr_BJ.txt",
  "fr_BL.txt",
  "fr_CA.txt",
  "fr_CD.txt",
  "fr_CF.txt",
  "fr_CG.txt",
  "fr_CH.txt",
  "fr_CI.txt",
  "fr_CM.txt",
  "fr_DJ.txt",
  "fr_DZ.txt",
  "fr_FR.txt",
  "fr_GA.txt",
  "fr_GF.txt",
  "fr_GN.txt",
  "fr_GP.txt",
  "fr_GQ.txt",
  "fr_HT.txt",
  "fr_KM.txt",
  "fr_LU.txt",
  "fr_MA.txt",
  "fr_MC.txt",
  "fr_MF.txt",
  "fr_MG.txt",
  "fr_ML.txt",
  "fr_MQ.txt",
  "fr_MR.txt",
  "fr_MU.txt",
  "fr_NC.txt",
  "fr_NE.txt",
  "fr_PF.txt",
  "fr_PM.txt",
  "fr_RE.txt",
  "fr_RW.txt",
  "fr_SC.txt",
  "fr_SN.txt",
  "fr_SY.txt",
  "fr_TD.txt",
  "fr_TG.txt",
  "fr_TN.txt",
  "fr_VU.txt",
  "fr_WF.txt",
  "fr_YT.txt",
  "gu.txt",
  "he.txt",
  "hi.txt",
  "hr.txt",
  "hu.txt",
  "id.txt",
  "it.txt",
  "it_CH.txt",
  "ja.txt",
  "kn.txt",
  "ko.txt",
  "lt.txt",
  "lv.txt",
  "ml.txt",
  "mr.txt",
  "ms.txt",
  "nb.txt",
  "nl.txt",
  "nl_AW.txt",
  "nl_BE.txt",
  "nl_BQ.txt",
  "nl_CW.txt",
  "nl_NL.txt",
  "nl_SR.txt",
  "nl_SX.txt",
  "pl.txt",
  "pt.txt",
  "pt_AO.txt",
  "pt_BR.txt",
  "pt_CH.txt",
  "pt_CV.txt",
  "pt_GQ.txt",
  "pt_GW.txt",
  "pt_LU.txt",
  "pt_MO.txt",
  "pt_MZ.txt",
  "pt_PT.txt",
  "pt_ST.txt",
  "pt_TL.txt",
  "ro.txt",
  "ru.txt",
  "ru_BY.txt",
  "ru_KG.txt",
  "ru_KZ.txt",
  "ru_MD.txt",
  "ru_RU.txt",
  "ru_UA.txt",
  "sk.txt",
  "sl.txt",
  "sr.txt",
  "sr_BA.txt",
  "sr_CS.txt",
  "sr_ME.txt",
  "sr_RS.txt",
  "sr_XK.txt",
  "sr_Cyrl.txt",
  "sr_Cyrl_BA.txt",
  "sr_Cyrl_CS.txt",
  "sr_Cyrl_ME.txt",
  "sr_Cyrl_RS.txt",
  "sr_Cyrl_XK.txt",
  "sr_Latn.txt",
  "sr_Latn_BA.txt",
  "sr_Latn_CS.txt",
  "sr_Latn_ME.txt",
  "sr_Latn_RS.txt",
  "sr_Latn_XK.txt",
  "sv.txt",
  "sw.txt",
  "sw_CD.txt",
  "sw_KE.txt",
  "ta.txt",
  "te.txt",
  "th.txt",
  "tr.txt",
  "uk.txt",
  "vi.txt",
  "zh.txt",
  "zh_Hans.txt",
  "zh_Hans_CN.txt",
  "zh_Hans_SG.txt",
  "zh_Hant.txt",
  "zh_Hant_TW.txt",
  "zh_Hant_HK.txt",
  "af.txt",
  "ak.txt",
  "an.txt",
  "ast.txt",
  "az.txt",
  "be.txt",
  "bem.txt",
  "br.txt",
  "bs.txt",
  "ckb.txt",
  "cy.txt",
  "ee.txt",
  "eo.txt",
  "eu.txt",
  "fo.txt",
  "ga.txt",
  "gl.txt",
  "ha.txt",
  "haw.txt",
  "hy.txt",
  "ig.txt",
  "is.txt",
  "ka.txt",
  "kk.txt",
  "km.txt",
  "ku.txt",
  "ky.txt",
  "lg.txt",
  "ln.txt",
  "lo.txt",
  "mfe.txt",
  "mg.txt",
  "mk.txt",
  "mn.txt",
  "mo.txt",
  "ro_MD.txt",
  "mt.txt",
  "my.txt",
  "ne.txt",
  "nn.txt",
  "nyn.txt",
  "om.txt",
  "or.txt",
  "pa.txt",
  "ps.txt",
  "rm.txt",
  "rn.txt",
  "rw.txt",
  "si.txt",
  "sn.txt",
  "so.txt",
  "sq.txt",
  "tg.txt",
  "ti.txt",
  "to.txt",
  "ur.txt",
  "uz.txt",
  "wa.txt",
  "yo.txt",
  "zu.txt",
]

icu_locales_prefiltered_sources = []
icu_locales_generated = []
foreach(source_file, _locales_sources) {
  icu_locales_prefiltered_sources += [ "source/data/locales/$source_file" ]
  icu_locales_generated += [ string_replace(source_file, ".txt", ".res") ]
}

_locales_alias_sources = [
  # Currently maintained as GENRB_ALIAS_SOURCE in
  # source/data/locales/reslocal.mk
  "zh_CN.txt",
  "zh_TW.txt",
  "zh_HK.txt",
  "zh_SG.txt",
  "no.txt",
  "in.txt",
  "iw.txt",
  "tl.txt",
  "sh.txt",
]

icu_locales_alias_prefiltered_sources = []
foreach(source_file, _locales_alias_sources) {
  icu_locales_alias_prefiltered_sources += [
    "source/data/locales/$source_file" ]
  icu_locales_generated += [ string_replace(source_file, ".txt", ".res") ]
}

_misc_sources = [
  # List currently maintained as MISC_SOURCE in source/data/misc/miscfiles.mk
  "zoneinfo64.txt",
  "supplementalData.txt",  # 250KB currency per country info. Used?
  "likelySubtags.txt",
  "plurals.txt",
  "numberingSystems.txt",
  "icuver.txt",
  "icustd.txt",
  "metadata.txt",
  "metaZones.txt",
  "windowsZones.txt",
  "keyTypeData.txt",
  "timezoneTypes.txt",
  "currencyNumericCodes.txt",
  "genderList.txt",  # TODO: Remove - unused?
  "dayPeriods.txt",
  "pluralRanges.txt",
]

icu_misc_sources = []
icu_misc_generated = []
foreach(source_file, _misc_sources) {
  icu_misc_sources += [ "source/data/misc/$source_file" ]
  icu_misc_generated += [ string_replace(source_file, ".txt", ".res") ]
}

icu_curr_supplemental_prefiltered_sources = [  # TODO Move to the build file?
  "source/data/curr/supplementalData.txt",
]

icu_curr_supplemental_generated = [
  "curr/supplementalData.res",
]

_curr_sources = [
  # List currently maintained as CURR_SOURCE in curr/reslocal.mk
  "am.txt",
  "ar.txt",
  "ar_AE.txt",
  "ar_DJ.txt",
  "ar_ER.txt",
  "ar_KM.txt",
  "ar_LB.txt",
  "ar_SO.txt",
  "ar_SS.txt",
  "bg.txt",
  "bn.txt",
  "ca.txt",
  "cs.txt",
  "da.txt",
  "de.txt",
  "de_CH.txt",
  "de_LI.txt",
  "de_LU.txt",
  "el.txt",
  "en.txt",
  "en_001.txt",
  "en_150.txt",
  "en_AU.txt",
  "en_CA.txt",
  "en_GB.txt",
  "en_HK.txt",
  "en_IN.txt",
  "en_NG.txt",
  "en_NZ.txt",
  "en_SG.txt",
  "en_ZA.txt",
  "en_AG.txt",
  "en_AI.txt",
  "en_AT.txt",
  "en_BB.txt",
  "en_BE.txt",
  "en_BI.txt",
  "en_BM.txt",
  "en_BS.txt",
  "en_BW.txt",
  "en_BZ.txt",
  "en_CC.txt",
  "en_CH.txt",
  "en_CK.txt",
  "en_CM.txt",
  "en_CX.txt",
  "en_CY.txt",
  "en_DE.txt",
  "en_DG.txt",
  "en_DK.txt",
  "en_DM.txt",
  "en_ER.txt",
  "en_FI.txt",
  "en_FJ.txt",
  "en_FK.txt",
  "en_FM.txt",
  "en_GD.txt",
  "en_GG.txt",
  "en_GH.txt",
  "en_GI.txt",
  "en_GM.txt",
  "en_GY.txt",
  "en_IE.txt",
  "en_IL.txt",
  "en_IM.txt",
  "en_IO.txt",
  "en_JE.txt",
  "en_JM.txt",
  "en_KE.txt",
  "en_KI.txt",
  "en_KN.txt",
  "en_KY.txt",
  "en_LC.txt",
  "en_LR.txt",
  "en_LS.txt",
  "en_MG.txt",
  "en_MO.txt",
  "en_MS.txt",
  "en_MT.txt",
  "en_MU.txt",
  "en_MW.txt",
  "en_MY.txt",
  "en_NA.txt",
  "en_NF.txt",
  "en_NH.txt",
  "en_NL.txt",
  "en_NR.txt",
  "en_NU.txt",
  "en_PG.txt",
  "en_PH.txt",
  "en_PK.txt",
  "en_PN.txt",
  "en_PW.txt",
  "en_RH.txt",
  "en_RW.txt",
  "en_SB.txt",
  "en_SC.txt",
  "en_SD.txt",
  "en_SE.txt",
  "en_SH.txt",
  "en_SI.txt",
  "en_SL.txt",
  "en_SS.txt",
  "en_SX.txt",
  "en_SZ.txt",
  "en_TC.txt",
  "en_TK.txt",
  "en_TO.txt",
  "en_TT.txt",
  "en_TV.txt",
  "en_TZ.txt",
  "en_UG.txt",
  "en_VC.txt",
  "en_VG.txt",
  "en_VU.txt",
  "en_WS.txt",
  "en_ZM.txt",
  "en_ZW.txt",
  "es.txt",
  "es_419.txt",
  "es_AR.txt",
  "es_BO.txt",
  "es_BR.txt",
  "es_BZ.txt",
  "es_CL.txt",
  "es_CO.txt",
  "es_CR.txt",
  "es_CU.txt",
  "es_DO.txt",
  "es_EC.txt",
  "es_GQ.txt",
  "es_GT.txt",
  "es_HN.txt",
  "es_MX.txt",
  "es_NI.txt",
  "es_PA.txt",
  "es_PE.txt",
  "es_PH.txt",
  "es_PR.txt",
  "es_PY.txt",
  "es_SV.txt",
  "es_US.txt",
  "es_UY.txt",
  "es_VE.txt",
  "et.txt",
  "fa.txt",
  "fi.txt",
  "fil.txt",
  "fr.txt",
  "fr_CA.txt",
  "fr_BI.txt",
  "fr_CD.txt",
  "fr_DJ.txt",
  "fr_DZ.txt",
  "fr_GN.txt",
  "fr_HT.txt",
  "fr_KM.txt",
  "fr_LU.txt",
  "fr_MG.txt",
  "fr_MR.txt",
  "fr_MU.txt",
  "fr_RW.txt",
  "fr_SC.txt",
  "fr_SY.txt",
  "fr_TN.txt",
  "fr_VU.txt",
  "gu.txt",
  "he.txt",
  "hi.txt",
  "hr.txt",
  "hu.txt",
  "id.txt",
  "it.txt",
  "ja.txt",
  "kn.txt",
  "ko.txt",
  "lt.txt",
  "lv.txt",
  "ml.txt",
  "mr.txt",
  "ms.txt",
  "nb.txt",
  "nl.txt",
  "pl.txt",
  "pt.txt",
  "pt_PT.txt",
  "pt_AO.txt",
  "pt_CV.txt",
  "pt_LU.txt",
  "pt_MO.txt",
  "pt_MZ.txt",
  "pt_ST.txt",
  "ro.txt",
  "ro_MD.txt",
  "ru.txt",
  "sk.txt",
  "sl.txt",
  "sr.txt",
  "sr_BA.txt",
  "sr_CS.txt",
  "sr_ME.txt",
  "sr_RS.txt",
  "sr_XK.txt",
  "sr_Cyrl.txt",
  "sr_Cyrl_BA.txt",
  "sr_Cyrl_CS.txt",
  "sr_Cyrl_RS.txt",
  "sr_Cyrl_XK.txt",
  "sr_Latn.txt",
  "sr_Latn_BA.txt",
  "sr_Latn_CS.txt",
  "sr_Latn_ME.txt",
  "sr_Latn_RS.txt",
  "sv.txt",
  "sw.txt",
  "sw_CD.txt",
  "sw_UG.txt",
  "ta.txt",
  "te.txt",
  "th.txt",
  "tr.txt",
  "uk.txt",
  "vi.txt",
  "zh.txt",
  "zh_Hans.txt",
  "zh_Hans_CN.txt",
  "zh_Hans_SG.txt",
  "zh_Hans_HK.txt",
  "zh_Hans_MO.txt",
  "zh_Hant.txt",
  "zh_Hant_TW.txt",
  "zh_Hant_HK.txt",
  "zh_Hant_MO.txt",
]

icu_curr_prefiltered_sources = []
icu_curr_generated = []
foreach(source_file, _curr_sources) {
  icu_curr_prefiltered_sources += [ "source/data/curr/$source_file" ]
  icu_curr_generated += [
    "curr/" + string_replace(source_file, ".txt", ".res") ]
}

_curr_alias_sources = [
  # List currently maintained as CURR_ALIAS_SOURCE in curr/reslocal.mk
  # Aliases are not in res_index.txt, otherwise they are treated the same.
  "zh_CN.txt",
  "zh_TW.txt",
  "zh_HK.txt",
  "zh_MO.txt",
  "zh_SG.txt",
  "mo.txt",
  "no.txt",
  "in.txt",
  "iw.txt",
  "tl.txt",
  "ar_SA.txt",
]

icu_curr_alias_prefiltered_sources = []
foreach(source_file, _curr_alias_sources) {
  icu_curr_alias_prefiltered_sources += [ "source/data/curr/$source_file" ]
  icu_curr_generated += [
    "curr/" + string_replace(source_file, ".txt", ".res") ]
}

# Keep info about the top 150 currencies
currency_keep_list = "scripts/currencies.list"

_lang_sources = [
  # Currently maintained as LANG_SOURCE in source/data/lang/*local.mk
  "am.txt",
  "ar.txt",
  "ar_SA.txt",
  "ar_LY.txt",
  "ar_EG.txt",
  "bg.txt",
  "bn.txt",
  "ca.txt",
  "cs.txt",
  "da.txt",
  "de.txt",
  "de_AT.txt",
  "de_CH.txt",
  "el.txt",
  "en.txt",
  "en_GB.txt",
  "en_CA.txt",
  "en_AU.txt",
  "en_IN.txt",
  "en_001.txt",
  "en_NZ.txt",
  "es.txt",
  "es_419.txt",
  "et.txt",
  "fa.txt",
  "fi.txt",
  "fil.txt",
  "fr.txt",
  "fr_CA.txt",
  "fr_CH.txt",
  "gu.txt",
  "he.txt",
  "hi.txt",
  "hr.txt",
  "hu.txt",
  "id.txt",
  "it.txt",
  "ja.txt",
  "kn.txt",
  "ko.txt",
  "lt.txt",
  "lv.txt",
  "ml.txt",
  "mr.txt",
  "ms.txt",
  "nb.txt",
  "nl.txt",
  "pl.txt",
  "pt.txt",
  "pt_PT.txt",
  "ro.txt",
  "ru.txt",
  "sk.txt",
  "sl.txt",
  "sr.txt",
  "sv.txt",
  "sw.txt",
  "ta.txt",
  "te.txt",
  "th.txt",
  "tr.txt",
  "uk.txt",
  "vi.txt",
  "zh.txt",
  "zh_Hans.txt",
  "zh_Hans_CN.txt",
  "zh_Hans_SG.txt",
  "zh_Hant.txt",
  "zh_Hant_TW.txt",
  "zh_Hant_HK.txt",
  "af.txt",
  "ak.txt",
  "an.txt",
  "ast.txt",
  "az.txt",
  "be.txt",
  "bem.txt",
  "br.txt",
  "bs.txt",
  "ckb.txt",
  "cy.txt",
  "ee.txt",
  "eo.txt",
  "eu.txt",
  "fo.txt",
  "ga.txt",
  "gl.txt",
  "ha.txt",
  "haw.txt",
  "hy.txt",
  "ig.txt",
  "is.txt",
  "ka.txt",
  "kk.txt",
  "km.txt",
  "ku.txt",
  "ky.txt",
  "lg.txt",
  "ln.txt",
  "lo.txt",
  "mfe.txt",
  "mg.txt",
  "mk.txt",
  "mn.txt",
  "mo.txt",
  "ro_MD.txt",
  "mt.txt",
  "my.txt",
  "ne.txt",
  "nn.txt",
  "nyn.txt",
  "om.txt",
  "or.txt",
  "pa.txt",
  "ps.txt",
  "rm.txt",
  "rn.txt",
  "rw.txt",
  "si.txt",
  "sn.txt",
  "so.txt",
  "sq.txt",
  "sr_Latn.txt",
  "tg.txt",
  "ti.txt",
  "to.txt",
  "ur.txt",
  "uz.txt",
  "wa.txt",
  "yo.txt",
  "zu.txt",
]

icu_lang_prefiltered_sources = []
icu_lang_generated = []
foreach(source_file, _lang_sources) {
  icu_lang_prefiltered_sources += [ "source/data/lang/$source_file" ]
  icu_lang_generated += [
    "lang/" + string_replace(source_file, ".txt", ".res") ]
}

_lang_alias_sources = [
  # List currently maintained as LANG_ALIAS_SOURCE in
  # source/data/lang/reslocal.mk
  "zh_CN.txt",
  "zh_TW.txt",
  "zh_HK.txt",
  "zh_SG.txt",
  "no.txt",
  "in.txt",
  "iw.txt",
  "tl.txt",
  "sh.txt",
]

icu_lang_alias_prefiltered_sources = []
foreach(source_file, _lang_alias_sources) {
  icu_lang_alias_prefiltered_sources += [ "source/data/lang/$source_file" ]
  icu_lang_generated += [
    "lang/" + string_replace(source_file, ".txt", ".res") ]
}

_region_sources = [
  # List currently maintained as REGION_SOURCE in region/reslocal.mk
  "am.txt",
  "ar.txt",
  "bg.txt",
  "bn.txt",
  "ca.txt",
  "cs.txt",
  "da.txt",
  "de.txt",
  "el.txt",
  "en.txt",
  "en_GB.txt",
  "es.txt",
  "es_419.txt",
  "et.txt",
  "fa.txt",
  "fi.txt",
  "fil.txt",
  "fr.txt",
  "fr_CA.txt",
  "gu.txt",
  "he.txt",
  "hi.txt",
  "hr.txt",
  "hu.txt",
  "id.txt",
  "it.txt",
  "ja.txt",
  "kn.txt",
  "ko.txt",
  "lt.txt",
  "lv.txt",
  "ml.txt",
  "mr.txt",
  "ms.txt",
  "nb.txt",
  "nl.txt",
  "pl.txt",
  "pt.txt",
  "pt_PT.txt",
  "ro.txt",
  "ru.txt",
  "sk.txt",
  "sl.txt",
  "sr.txt",
  "sv.txt",
  "sw.txt",
  "ta.txt",
  "te.txt",
  "th.txt",
  "tr.txt",
  "uk.txt",
  "vi.txt",
  "zh.txt",
  "zh_Hans.txt",
  "zh_Hans_CN.txt",
  "zh_Hans_SG.txt",
  "zh_Hant.txt",
  "zh_Hant_TW.txt",
  "zh_Hant_HK.txt",
]

icu_region_prefiltered_sources = []
icu_region_generated = []
foreach(source_file, _region_sources) {
  icu_region_prefiltered_sources += [ "source/data/region/$source_file" ]
  icu_region_generated += [
    "region/" + string_replace(source_file, ".txt", ".res") ]
}

_region_alias_sources = [
  # List currently maintained as REGION_ALIAS_SOURCE in
  # source/data/region/reslocal.mk
  "zh_CN.txt",
  "zh_TW.txt",
  "zh_HK.txt",
  "zh_SG.txt",
  "no.txt",
  "in.txt",
  "iw.txt",
  "tl.txt",
  # Note: Some other alias include "sh.txt",
]

icu_region_alias_prefiltered_sources = []
foreach(source_file, _region_alias_sources) {
  icu_region_alias_prefiltered_sources += [ "source/data/region/$source_file" ]
  icu_region_generated += [
    "region/" + string_replace(source_file, ".txt", ".res") ]
}

_zone_sources = [
  # List currently maintained as ZONE_SOURCE in zone/reslocal.mk
  "am.txt",
  "ar.txt",
  "bg.txt",
  "bn.txt",
  "ca.txt",
  "cs.txt",
  "da.txt",
  "de.txt",
  "el.txt",
  "en.txt",
  "en_001.txt",
  "en_150.txt",
  "en_AU.txt",
  "en_CA.txt",
  "en_GB.txt",
  "en_IN.txt",
  "en_NZ.txt",
  "en_ZA.txt",
  "es.txt",
  "es_419.txt",
  "es_MX.txt",
  "es_AR.txt",
  "es_US.txt",
  "et.txt",
  "fa.txt",
  "fi.txt",
  "fil.txt",
  "fr.txt",
  "fr_CA.txt",
  "gu.txt",
  "he.txt",
  "hi.txt",
  "hr.txt",
  "hu.txt",
  "id.txt",
  "it.txt",
  "ja.txt",
  "kn.txt",
  "ko.txt",
  "lt.txt",
  "lv.txt",
  "ml.txt",
  "mr.txt",
  "ms.txt",
  "nb.txt",
  "nl.txt",
  "pl.txt",
  "pt.txt",
  "pt_PT.txt",
  "ro.txt",
  "ru.txt",
  "sk.txt",
  "sl.txt",
  "sr.txt",
  "sv.txt",
  "sw.txt",
  "ta.txt",
  "te.txt",
  "th.txt",
  "tr.txt",
  "uk.txt",
  "vi.txt",
  "zh.txt",
  "zh_Hans.txt",
  "zh_Hans_CN.txt",
  "zh_Hans_SG.txt",
  "zh_Hant.txt",
  "zh_Hant_TW.txt",
  "zh_Hant_HK.txt",
]

icu_zone_prefiltered_sources = []
icu_zone_generated = []
foreach(source_file, _zone_sources) {
  icu_zone_prefiltered_sources += [ "source/data/zone/$source_file" ]
  icu_zone_generated += [
    "zone/" + string_replace(source_file, ".txt", ".res") ]
}

_zone_alias_sources = [
  # List currently maintained as ZONE_ALIAS_SOURCE in
  # source/data/region/reslocal.mk
  "zh_CN.txt",
  "zh_TW.txt",
  "zh_HK.txt",
  "zh_SG.txt",
  "no.txt",
  "in.txt",
  "iw.txt",
  # Note: Some other alias include "sh.txt" and "tl.txt",
]

icu_zone_alias_prefiltered_sources = []
foreach(source_file, _zone_alias_sources) {
  icu_zone_alias_prefiltered_sources += [ "source/data/zone/$source_file" ]
  icu_zone_generated += [
    "zone/" + string_replace(source_file, ".txt", ".res") ]
}

icu_zone_extra_sources = [
  "source/data/zone/tzdbNames.txt",
]

icu_zone_generated += [
  "zone/tzdbNames.res",
]

_unit_sources = [
  # List currently maintained as UNIT_SOURCE in source/data/unit/reslocal.mk
  "am.txt",
  "ar.txt",
  "bg.txt",
  "bn.txt",
  "ca.txt",
  "cs.txt",
  "da.txt",
  "de.txt",
  "de_CH.txt",
  "el.txt",
  "en.txt",
  "en_001.txt",
  "en_150.txt",
  "en_AU.txt",
  "en_CA.txt",
  "en_GB.txt",
  "en_IN.txt",
  "en_NZ.txt",
  "en_ZA.txt",
  "en_AG.txt",
  "en_AI.txt",
  "en_AT.txt",
  "en_BB.txt",
  "en_BE.txt",
  "en_BM.txt",
  "en_BS.txt",
  "en_BW.txt",
  "en_BZ.txt",
  "en_CC.txt",
  "en_CH.txt",
  "en_CK.txt",
  "en_CM.txt",
  "en_CX.txt",
  "en_CY.txt",
  "en_DE.txt",
  "en_DG.txt",
  "en_DK.txt",
  "en_DM.txt",
  "en_ER.txt",
  "en_FI.txt",
  "en_FJ.txt",
  "en_FK.txt",
  "en_FM.txt",
  "en_GD.txt",
  "en_GG.txt",
  "en_GH.txt",
  "en_GI.txt",
  "en_GM.txt",
  "en_GY.txt",
  "en_HK.txt",
  "en_IE.txt",
  "en_IL.txt",
  "en_IM.txt",
  "en_IO.txt",
  "en_JE.txt",
  "en_JM.txt",
  "en_KE.txt",
  "en_KI.txt",
  "en_KN.txt",
  "en_KY.txt",
  "en_LC.txt",
  "en_LR.txt",
  "en_LS.txt",
  "en_MG.txt",
  "en_MO.txt",
  "en_MS.txt",
  "en_MT.txt",
  "en_MU.txt",
  "en_MW.txt",
  "en_MY.txt",
  "en_NA.txt",
  "en_NF.txt",
  "en_NG.txt",
  "en_NH.txt",
  "en_NL.txt",
  "en_NR.txt",
  "en_NU.txt",
  "en_PG.txt",
  "en_PH.txt",
  "en_PK.txt",
  "en_PN.txt",
  "en_PW.txt",
  "en_RH.txt",
  "en_RW.txt",
  "en_SB.txt",
  "en_SC.txt",
  "en_SD.txt",
  "en_SE.txt",
  "en_SG.txt",
  "en_SH.txt",
  "en_SI.txt",
  "en_SL.txt",
  "en_SS.txt",
  "en_SX.txt",
  "en_SZ.txt",
  "en_TC.txt",
  "en_TK.txt",
  "en_TO.txt",
  "en_TT.txt",
  "en_TV.txt",
  "en_TZ.txt",
  "en_UG.txt",
  "en_VC.txt",
  "en_VG.txt",
  "en_VU.txt",
  "en_WS.txt",
  "en_ZM.txt",
  "en_ZW.txt",
  "es.txt",
  "es_419.txt",
  "es_AR.txt",
  "es_MX.txt",
  "es_US.txt",
  "es_BO.txt",
  "es_BR.txt",
  "es_BZ.txt",
  "es_CL.txt",
  "es_CO.txt",
  "es_CR.txt",
  "es_CU.txt",
  "es_DO.txt",
  "es_EC.txt",
  "es_GT.txt",
  "es_HN.txt",
  "es_NI.txt",
  "es_PA.txt",
  "es_PE.txt",
  "es_PR.txt",
  "es_PY.txt",
  "es_SV.txt",
  "es_UY.txt",
  "es_VE.txt",
  "et.txt",
  "fa.txt",
  "fi.txt",
  "fil.txt",
  "fr.txt",
  "fr_CA.txt",
  "fr_HT.txt",
  "gu.txt",
  "he.txt",
  "hi.txt",
  "hr.txt",
  "hu.txt",
  "id.txt",
  "it.txt",
  "ja.txt",
  "kn.txt",
  "ko.txt",
  "lt.txt",
  "lv.txt",
  "ml.txt",
  "mr.txt",
  "ms.txt",
  "nb.txt",
  "nl.txt",
  "pl.txt",
  "pt.txt",
  "pt_PT.txt",
  "pt_AO.txt",
  "pt_CH.txt",
  "pt_CV.txt",
  "pt_GQ.txt",
  "pt_GW.txt",
  "pt_LU.txt",
  "pt_MO.txt",
  "pt_MZ.txt",
  "pt_ST.txt",
  "pt_TL.txt",
  "ro.txt",
  "ro_MD.txt",
  "ru.txt",
  "sk.txt",
  "sl.txt",
  "sr.txt",
  "sr_BA.txt",
  "sr_CS.txt",
  "sr_ME.txt",
  "sr_RS.txt",
  "sr_XK.txt",
  "sr_Cyrl.txt",
  "sr_Cyrl_BA.txt",
  "sr_Cyrl_CS.txt",
  "sr_Cyrl_RS.txt",
  "sr_Cyrl_XK.txt",
  "sr_Latn.txt",
  "sr_Latn_BA.txt",
  "sr_Latn_CS.txt",
  "sr_Latn_ME.txt",
  "sr_Latn_RS.txt",
  "sv.txt",
  "sw.txt",
  "ta.txt",
  "te.txt",
  "th.txt",
  "tr.txt",
  "uk.txt",
  "vi.txt",
  "zh.txt",
  "zh_Hans.txt",
  "zh_Hans_CN.txt",
  "zh_Hans_SG.txt",
  "zh_Hant.txt",
  "zh_Hant_TW.txt",
  "zh_Hant_HK.txt",
  "zh_Hant_MO.txt",
]

icu_unit_prefiltered_sources = []
icu_unit_generated = []
foreach(source_file, _unit_sources) {
  icu_unit_prefiltered_sources += [ "source/data/unit/$source_file" ]
  icu_unit_generated += [
    "unit/" + string_replace(source_file, ".txt", ".res") ]
}

_unit_alias_sources = [
  "zh_CN.txt",
  "zh_TW.txt",
  "zh_HK.txt",
  "zh_SG.txt",
  "no.txt",
  "in.txt",
  "iw.txt",
  "tl.txt",
  "sh.txt",
]

icu_unit_alias_prefiltered_sources = []
foreach(source_file, _unit_alias_sources) {
  icu_unit_alias_prefiltered_sources += [ "source/data/unit/$source_file" ]
  icu_unit_generated += [
    "unit/" + string_replace(source_file, ".txt", ".res") ]
}

_coll_sources = [
  # List currently maintained as COLLATION_SOURCE in
  # source/data/coll/collocal.mk
  "am.txt",
  "ar.txt",
  "bg.txt",
  "bn.txt",
  "ca.txt",
  "cs.txt",
  "da.txt",
  "de.txt",
  "de_AT.txt",
  "el.txt",
  "en.txt",
  "en_US.txt",
  "es.txt",
  "et.txt",
  "fa.txt",
  "fi.txt",
  "fil.txt",
  "fr.txt",
  "fr_CA.txt",
  "gu.txt",
  "he.txt",
  "hi.txt",
  "hr.txt",
  "hu.txt",
  "id.txt",
  "it.txt",
  "ja.txt",
  "kn.txt",
  "ko.txt",
  "lt.txt",
  "lv.txt",
  "ml.txt",
  "mr.txt",
  "ms.txt",
  "nb.txt",
  "nn.txt",
  "pl.txt",
  "pt.txt",
  "ro.txt",
  "ru.txt",
  "sk.txt",
  "sl.txt",
  "sr.txt",
  "sr_Latn.txt",
  "sv.txt",
  "sw.txt",
  "ta.txt",
  "te.txt",
  "th.txt",
  "tr.txt",
  "uk.txt",
  "vi.txt",
  "zh.txt",
  "zh_Hant.txt",
]

icu_coll_prefiltered_sources = []
icu_coll_generated = []
foreach(source_file, _coll_sources) {
  icu_coll_prefiltered_sources += [ "source/data/coll/$source_file" ]
  icu_coll_generated += [
    "coll/" + string_replace(source_file, ".txt", ".res") ]
}

_coll_alias_sources = [
  # List currently maintained as COLLATION_ALIAS_SOURCE in
  # source/data/coll/collocal.mk
  "de_.txt",
  "de__PHONEBOOK.txt",
  "es_.txt",
  "es__TRADITIONAL.txt",
  "he_IL.txt",
  "id_ID.txt",
  "in.txt",
  "in_ID.txt",
  "iw.txt",
  "iw_IL.txt",
  "mo.txt",
  "nb_NO.txt",
  "no.txt",
  "no_NO.txt",
  "ro_MD.txt",
  "sh.txt",
  "sh_BA.txt",
  "sh_CS.txt",
  "sh_YU.txt",
  "sr_BA.txt",
  "sr_Cyrl.txt",
  "sr_Cyrl_BA.txt",
  "sr_Cyrl_ME.txt",
  "sr_Cyrl_RS.txt",
  "sr_Latn_BA.txt",
  "sr_Latn_RS.txt",
  "sr_ME.txt",
  "sr_RS.txt",
  "zh_CN.txt",
  "zh_HK.txt",
  "zh_Hans.txt",
  "zh_Hans_CN.txt",
  "zh_Hans_SG.txt",
  "zh_Hant_HK.txt",
  "zh_Hant_MO.txt",
  "zh_Hant_TW.txt",
  "zh_MO.txt",
  "zh_SG.txt",
  "zh_TW.txt",
]

icu_coll_alias_prefiltered_sources = []
foreach(source_file, _coll_alias_sources) {
  icu_coll_alias_prefiltered_sources += [ "source/data/coll/$source_file" ]
  icu_coll_generated += [
    "coll/" + string_replace(source_file, ".txt", ".res") ]
}
